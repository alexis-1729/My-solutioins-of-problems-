#include <iostream>

using namespace std;
#define MAXN 100005
long long int izq[MAXN],der[MAXN],tree[MAXN],nodos=0;long long  int  n,vx[1000001];

long long int new_nodo(long long int n){
tree[nodos]=n;
izq[nodos]=-1;
der[nodos]=-1;return nodos++;
}
  long long int  in(long long int nodo,long long int n){
if(n<tree[nodo]){
    if(izq[nodo]==-1)
    {
      izq[nodo]=  new_nodo(n);
       return 1;
    }
    else{
       return 1+in(izq[nodo],n);
    }
}
else
{
    if(der[nodo]==-1){

      der[nodo] = new_nodo(n);
      return 1;
    }
else

   {
       return 1+in(der[nodo],n);}
   }

}
 main()
{
 ios_base::sync_with_stdio(0);cin.tie(0);
   cin>>n;
   for(int i=0;i<n;i++)cin>>vx[i];
    int raiz;
    cout<<"0\n";
    for(int i=0;i<n;i++)
    {
        if(i==0) raiz=new_nodo(vx[i]);
        else cout<<in(raiz,vx[i])<<"\n";
    }


}
