#include <bits/stdc++.h>
using namespace std;

struct node {
    int x, y, p;
};

bool operator < (node x, node y) {
    return x.p > y.p;
}

int m, n;
int xi, yi, xf, yf;
char mx[501][501];
priority_queue<node> cola;

void solve(node pa) {
    cola.pop();

    if (pa.x < 1 || pa.x > n || pa.y < 1 || pa.y > m || mx[pa.x][pa.y] == '#')
        return;

    pa.p+= mx[pa.x][pa.y];
    mx[pa.x][pa.y] = '#';

    if (pa.x == xf && pa.y == yf) {
        cout << pa.p;
        exit(0);
    }

   cola.push(node{pa.x+1,pa.y,pa.p});
   cola.push(node{pa.x,pa.y+1,pa.p});
   cola.push(node{pa.x,pa.y-1,pa.p});
   cola.push(node{pa.x-1,pa.y,pa.p});
}

main() {
    ios_base::sync_with_stdio(0); cin.tie();
    cin>>n>>m;
    cin>>xi>>yi>>xf>>yf;

    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= m; j++) {
            cin >> mx[i][j];
            if (mx[i][j] == '.')
                mx[i][j] = 1;
            else if (isdigit(mx[i][j]))
                mx[i][j] -= '0' - 1;
        }

    cola.push(node {xi, yi, -1});
    while (!cola.empty())
        solve(cola.top());
}
